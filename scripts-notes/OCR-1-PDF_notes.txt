PDF OCR and Image Preprocessing Script
This script is designed to perform Optical Character Recognition (OCR) on PDF files containing images and extract text from them. It also applies preprocessing techniques to enhance the images for better OCR accuracy. Below is an explanation of the main functionalities and components of the script:

Prerequisites
Before running the script, ensure you have the following libraries and tools installed:

os: Used for file and directory operations.
PIL (Python Imaging Library): Provides image processing capabilities.
pytesseract: Utilized for OCR functionality.
pdf2image: Used to convert PDFs to images.
sys: Used for system-level operations.
Image Preprocessing
The preprocess_image function enhances the image for OCR by performing the following steps:

Rescaling the image to increase its dimensions.
Converting the image to grayscale for better text extraction.
Enhancing the image's contrast.
Applying binarization to make text more distinct.
Reducing noise using a Median Filter.
PDF to Images Conversion
The pdf_to_images function attempts to convert a PDF file into a list of images using the pdf2image library. If any errors occur during the conversion process, they are caught, and an error message is displayed.

OCR Text Extraction
The ocr_images function extracts text from a list of preprocessed images using the pytesseract.image_to_string method. The text extracted from all images is concatenated and returned as a single string.

Processing PDF Files
The process_pdf_folder function processes all PDF files within a specified folder. It performs the following steps:

Checks if the specified output folder exists. If not, it creates the folder.
Iterates through the files in the PDF folder.
For each PDF file, it converts the PDF to a list of images and applies OCR to extract text.
The extracted text is saved to a text file with the same name as the original PDF, but with a '.txt' extension in the output folder.
User Interaction
The script prompts the user to provide the following folder paths:

PDF_FOLDER_PATH: The path to the folder containing the PDF files for OCR.
OUTPUT_FOLDER_PATH: The path to the folder where the OCR results (text files) will be saved.
Error Handling
The script checks if the provided input folder exists. If not, it displays an error message and exits with an error code using sys.exit(1).

Execution
To execute the script:

Ensure you have the required libraries installed.
Run the script.
Provide the paths to the PDF folder and the output folder when prompted.
The script will process the PDF files, apply OCR, and save the results as text files in the output folder.
Once completed, the script will display a message indicating that OCR has been performed for all PDFs.

This script helps automate the OCR process for PDF documents containing images, making it easier to extract text and work with the textual content.